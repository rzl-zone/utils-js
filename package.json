{
  "name": "@rzl-zone/utils-js",
  "version": "3.5.0",
  "sideEffects": false,
  "engineStrict": true,
  "license": "MIT",
  "type": "module",
  "unpkg": "./dist/rzl-utils.global.js",
  "jsdelivr": "./dist/rzl-utils.global.js",
  "types": "./dist/index.d.ts",
  "author": "Rizalvin Dwiky <rizalvindwiky1998@gmail.com>",
  "homepage": "https://github.com/rzl-zone/utils-js#readme",
  "description": "A modern, lightweight set of JavaScript utility functions with TypeScript support for everyday development, crafted to enhance code readability and maintainability.",
  "contributors": [
    "Rizalvin Dwiky <rizalvindwiky1998@gmail.com>"
  ],
  "bugs": {
    "url": "https://github.com/rzl-zone/utils-js/issues"
  },
  "dependencies": {
    "@rzl-zone/ts-types-plus": "^0.0.8",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "libphonenumber-js": "^1.12.17",
    "server-only": "^0.0.1",
    "tailwind-merge-v3": "npm:tailwind-merge@2.6.0",
    "tailwind-merge-v4": "npm:tailwind-merge@3.3.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.31.0",
    "@types/node": "^20.19.11",
    "@types/rollup": "^0.51.4",
    "@vitest/coverage-v8": "^3.2.4",
    "barrelsby": "^2.8.1",
    "del-cli": "^6.0.0",
    "dts-bundle-generator": "^9.5.1",
    "eslint": "^9.31.0",
    "globals": "^16.3.0",
    "jsdom": "^26.1.0",
    "next": "^15.5.3",
    "tailwindcss": "^4.1.13",
    "terser": "^5.44.0",
    "tsc-alias": "^1.8.16",
    "tsup": "^8.5.0",
    "tsx": "^4.20.3",
    "typescript": "^5.9.2",
    "typescript-eslint": "^8.41.0",
    "vitest": "^3.2.4"
  },
  "peerDependencies": {
    "tailwindcss": "^3.0.0 || ^4.0.0"
  },
  "peerDependenciesMeta": {
    "tailwindcss": {
      "optional": true
    }
  },
  "engines": {
    "node": ">=16"
  },
  "exports": {
    ".": {
      "types": "./dist/index.d.ts"
    },
    "./assertions": {
      "import": {
        "types": "./dist/assertions/index.d.ts",
        "default": "./dist/assertions/index.js"
      },
      "require": {
        "types": "./dist/assertions/index.d.ts",
        "default": "./dist/assertions/index.cjs"
      }
    },
    "./conversions": {
      "import": {
        "types": "./dist/conversions/index.d.ts",
        "default": "./dist/conversions/index.js"
      },
      "require": {
        "types": "./dist/conversions/index.d.ts",
        "default": "./dist/conversions/index.cjs"
      }
    },
    "./events": {
      "import": {
        "types": "./dist/events/index.d.ts",
        "default": "./dist/events/index.js"
      },
      "require": {
        "types": "./dist/events/index.d.ts",
        "default": "./dist/events/index.cjs"
      }
    },
    "./formatters": {
      "import": {
        "types": "./dist/formatters/index.d.ts",
        "default": "./dist/formatters/index.js"
      },
      "require": {
        "types": "./dist/formatters/index.d.ts",
        "default": "./dist/formatters/index.cjs"
      }
    },
    "./generators": {
      "import": {
        "types": "./dist/generators/index.d.ts",
        "default": "./dist/generators/index.js"
      },
      "require": {
        "types": "./dist/generators/index.d.ts",
        "default": "./dist/generators/index.cjs"
      }
    },
    "./next": {
      "import": {
        "types": "./dist/next/index.d.ts",
        "default": "./dist/next/index.js"
      },
      "require": {
        "types": "./dist/next/index.d.ts",
        "default": "./dist/next/index.cjs"
      }
    },
    "./next/server": {
      "import": {
        "types": "./dist/next/server/index.d.ts",
        "default": "./dist/next/server/index.js"
      },
      "require": {
        "types": "./dist/next/server/index.d.ts",
        "default": "./dist/next/server/index.cjs"
      }
    },
    "./operations": {
      "import": {
        "types": "./dist/operations/index.d.ts",
        "default": "./dist/operations/index.js"
      },
      "require": {
        "types": "./dist/operations/index.d.ts",
        "default": "./dist/operations/index.cjs"
      }
    },
    "./parsers": {
      "import": {
        "types": "./dist/parsers/index.d.ts",
        "default": "./dist/parsers/index.js"
      },
      "require": {
        "types": "./dist/parsers/index.d.ts",
        "default": "./dist/parsers/index.cjs"
      }
    },
    "./predicates": {
      "import": {
        "types": "./dist/predicates/index.d.ts",
        "default": "./dist/predicates/index.js"
      },
      "require": {
        "types": "./dist/predicates/index.d.ts",
        "default": "./dist/predicates/index.cjs"
      }
    },
    "./promises": {
      "import": {
        "types": "./dist/promises/index.d.ts",
        "default": "./dist/promises/index.js"
      },
      "require": {
        "types": "./dist/promises/index.d.ts",
        "default": "./dist/promises/index.cjs"
      }
    },
    "./strings": {
      "import": {
        "types": "./dist/strings/index.d.ts",
        "default": "./dist/strings/index.js"
      },
      "require": {
        "types": "./dist/strings/index.d.ts",
        "default": "./dist/strings/index.cjs"
      }
    },
    "./tailwind": {
      "import": {
        "types": "./dist/tailwind/index.d.ts",
        "default": "./dist/tailwind/index.js"
      },
      "require": {
        "types": "./dist/tailwind/index.d.ts",
        "default": "./dist/tailwind/index.cjs"
      }
    },
    "./urls": {
      "import": {
        "types": "./dist/urls/index.d.ts",
        "default": "./dist/urls/index.js"
      },
      "require": {
        "types": "./dist/urls/index.d.ts",
        "default": "./dist/urls/index.cjs"
      }
    }
  },
  "typesVersions": {
    "*": {
      ".": [
        "./dist/index.d.ts"
      ],
      "assertions": [
        "dist/assertions/index.d.ts"
      ],
      "conversions": [
        "dist/conversions/index.d.ts"
      ],
      "events": [
        "dist/events/index.d.ts"
      ],
      "formatters": [
        "dist/formatters/index.d.ts"
      ],
      "generators": [
        "dist/generators/index.d.ts"
      ],
      "next": [
        "dist/next/index.d.ts"
      ],
      "next/server": [
        "dist/next/server/index.d.ts"
      ],
      "operations": [
        "dist/operations/index.d.ts"
      ],
      "parsers": [
        "dist/parsers/index.d.ts"
      ],
      "predicates": [
        "dist/predicates/index.d.ts"
      ],
      "promises": [
        "dist/promises/index.d.ts"
      ],
      "strings": [
        "dist/strings/index.d.ts"
      ],
      "tailwind": [
        "dist/tailwind/index.d.ts"
      ],
      "urls": [
        "dist/urls/index.d.ts"
      ]
    }
  },
  "files": [
    "dist",
    "README.md",
    "LICENSE.md"
  ],
  "keywords": [
    "javascript",
    "typescript",
    "utils",
    "helpers",
    "library",
    "@rzl-zone/utils-js",
    "rzl",
    "rzl-zone",
    "utils-js",
    "utility",
    "rzl-utils",
    "helper",
    "functions"
  ],
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rzl-zone/utils-js.git"
  },
  "scripts": {
    "barrel:generate": "npx barrelsby --config barrelsby.config.json",
    "barrel:remove-comment-dist": "tsx scripts/removeBarrelsbyComment.ts",
    "barrel": "npm run barrel:generate && npm run barrel:generate && npm run barrel:remove-comment-dist",
    "clean-dist": "del-cli \"dist/*\"",
    "clean-dist:types-cts": "del-cli \"dist/**/*.d.{cts,mts}\"",
    "clean-dist:js-comments": "tsx scripts/cleanDistJsComments.ts",
    "delete-dist:index-runtime": "del-cli \"dist/index.{js,js.map,cjs,cjs.map}\" \"dist/index.d.{ts,cts,mts,esm}\"",
    "minify:dist": "tsx scripts/minifyDist.ts",
    "build:types-dts": "dts-bundle-generator --config dts-config.cjs --silent --external-imports next",
    "generate:reference-index": "tsx scripts/generateReferenceIndex.ts",
    "postbuild": "npm run clean-dist:js-comments && npm run clean-dist:types-cts && npm run delete-dist:index-runtime && npm run generate:reference-index",
    "build": "npm run clean-dist && npm run barrel && tsup && npm run minify:dist && npm run postbuild",
    "format": "prettier --check .",
    "lint": "eslint . --ext .ts,.js",
    "lint:fix": "eslint . --ext .ts,.js --fix",
    "prepublishOnly": "npm run build",
    "check-publish": "npm run build && npm pack --dry-run",
    "release-patch": "npm version patch && git push && git push --tags && npm publish"
  }
}
